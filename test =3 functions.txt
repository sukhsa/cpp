//Q.1 Write a program to calculate the factorial of a given number
#include <bits/stdc++.h>
using namespace std;
    
unsigned long long factorial(int n) 
{
    if (n == 0 || n == 1)
        
        return 1;
   
    else
       
        return n * factorial(n - 1);
}

int main() {
    int number;
    cout << "Enter a number to calculate its factorial: ";
    cin >> number;

    if (number < 0) {
        cout << "Factorial is not defined for negative numbers.";
    } else {
        unsigned long long fact = factorial(number);
        cout << "Factorial of " << number << " is: " << fact;
    }

    return 0;
}
.................................................................................................................................................
//Q.2 Create a program to find whether a given number is prime or not.
#include <bits/stdc++.h>
using namespace std;
    bool isPrime(int num) {
    if (num <= 1)
        return false;
    for (int i = 2; i * i <= num; i++) 
    {
        if (num % i == 0)
            return false;
    }
    return true;
}

int main() {
    int number;
    cout << "Enter a number to check if it's prime: ";
    cin >> number;

    if (isPrime(number))
        cout << number << " is a prime number.";
    else
        cout << number << " is not a prime number.";

    return 0;
}
................................................................................................................................................
//Q.3 Write a program to find the sum of digits of a given number.
#include <bits/stdc++.h>
using namespace std;
   int sumOfDigits(int number) {
    int sum = 0;
    while (number > 0) {
        sum += number % 10; 
        number /= 10;       
    }
    return sum;
}

int main() {
    int number;
    cout << "Enter a number to find the sum of its digits: ";
    cin >> number;

    int sum = sumOfDigits(number);
    cout << "Sum of digits of " << number << " is: " << sum;

    return 0;
}
................................................................................................................................................
//Q.4 Write a program to find the GCD (Greatest Common Divisor) and Lcm of two given numbers.
#include <bits/stdc++.h>
using namespace std;
  int gcd(int a, int b) {
    while (b != 0) {
        int temp = b;
        b = a % b;
        a = temp;
    }
    return a;
}


int lcm(int a, int b) {
    return (a * b) / gcd(a, b);
}

int main() {
    int num1, num2;
    cout << "Enter two numbers to find their GCD and LCM: ";
    cin >> num1 >> num2;

    int gcd_result = gcd(num1, num2);
    int lcm_result = lcm(num1, num2);

    cout << "GCD of " << num1 << " and " << num2 << " is: " << gcd_result <<"\n";
    cout << "LCM of " << num1 << " and " << num2 << " is: " << lcm_result << "\n";

    return 0;
}
................................................................................................................................................
//Q.5 Write a program to count the number of digits in a given number.
#include <bits/stdc++.h>
using namespace std;
int countDigits(int number) 
{
    int count = 0;
    while (number != 0) {
        number /= 10;
        count++;
    }
    return count;
}

int main() {
    int number;
    cout << "Enter a number to count its digits: ";
    cin >> number;

    int digitCount = countDigits(number);
    cout << "Number of digits in " << number << " is: " << digitCount;

    return 0;
}
................................................................................................................................................
//Q.6 Create a program to print all prime numbers up to a given limit
#include <bits/stdc++.h>
using namespace std;
bool isPrime(int num) {
    if (num <= 1)
        return false;
    for (int i = 2; i * i <= num; i++) {
        if (num % i == 0)
            return false;
    }
    return true;
}


void printPrimesUpToLimit(int limit) {
    cout << "Prime numbers up to " << limit << " are:" <<"\n";
    for (int i = 2; i <= limit; i++) {
        if (isPrime(i))
            cout << i << " ";
    }
    cout << endl;
}

int main() {
    int limit;
    cout << "Enter the limit: ";
    cin >> limit;

    printPrimesUpToLimit(limit);

    return 0;
}
................................................................................................................................................
