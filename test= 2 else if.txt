//Q.1 Write a program that checks if a given year is a leap year or not. Use an `if-else` statement and logical operators to make the determination.
#include <bits/stdc++.h>
using namespace std;

int main()
{
    int year;
    cout << "Enter a year: ";
    cin >> year;

   
    if ((year % 4 == 0 && year % 100 != 0) || (year % 400 == 0)) {
        cout << year << " is a leap year." << endl;
    } else {
        cout << year << " is not a leap year." << endl;
    }

................................................................................................................................................
//Q.2 Create a C++ program that takes an integer as input and prints whether it is positive, negative, or zero using `if-else` statements.

#include <bits/stdc++.h>
using namespace std;

int main() {
    
    int number;
    cout << "Enter an integer: ";
    cin >> number;

    
    if (number > 0) {
        cout << "The entered number is positive.";
    } else if (number < 0) {
        cout << "The entered number is negative.";
    } else {
        cout << "The entered number is zero.";
    }

    return 0;
}
................................................................................................................................................
//Q.3 Write a program that takes the current time as input and prints a message based on whether it&#39;s morning, afternoon, evening, or night.

#include <bits/stdc++.h>
using namespace std;

int main() {
   
    int currentHour;
    cout << "Enter the current time (in 24-hour format, 0-23): ";
    cin >> currentHour;

    
    if (currentHour >= 0 && currentHour < 12) {
        cout << "Good morning!" << endl;
    } else if (currentHour >= 12 && currentHour < 17) {
        cout << "Good afternoon!" << endl;
    } else if (currentHour >= 17 && currentHour < 21) {
        cout << "Good evening!";
    } else {
        cout << "Good night!";
    }

    return 0;
}
................................................................................................................................................
//Q.4 Develop a program that checks the availability of a product in a store. If the product is instock(greater than 1) and the user has a valid membership, they can purchase it; otherwise,display an &quot;Out of stock&quot; message.
#include<bits/stdc++.h>
using namespace std;

int main() {
       try {
           int stocks=1,stck;
          int membership_code=27,mbm;
       cout<<"Enter the number of stocks you want to purchase and your membership code\n";
       cin>>stck>>mbm;
       if(stck>stocks)
       {
           throw runtime_error("over stock\n");
       }
       else if(mbm!=membership_code)
       {
           throw runtime_error("who are you\n");
       }
       else if(stocks<=1)
       {
           throw invalid_argument("stok was finished\n");
       }
       else if( (mbm==membership_code) && stocks>1 )
       {
           cout<<"Stock purchased "<<stck<<"\n";
           stocks=stocks-stck;
           cout<<"remaining stocks: "<<stocks;
       }
       else
       {
         throw runtime_error("please sorry plese purchased tommorrow\n");
       }
   }
   catch(const exception& e) {
        cerr << "Error: " << e.what() << endl;
    }

    return 0;
}
................................................................................................................................................

//Q.5 Create a basic ATM system where the user can withdraw money. Use if-else statements to check the account balance and handle withdrawal limits.
#include<bits/stdc++.h>
using namespace std;

int main() {
    try {
        int withdraw, acc = 200;
        cout << "Enter the amount you want to withdraw\n";
        cin >> withdraw;

        if (withdraw > acc) {
            throw runtime_error("Insufficient Balance");
        } else if (acc < 500) {
            throw runtime_error("Insufficient Balance (Account Balance is less than 500)");
        } else if ((withdraw % 500) != 0) {
            throw invalid_argument("Not in multiple of 5");
        } else {
            acc = acc - withdraw;
            cout << "Withdraw amount: " << withdraw << "\n";
            cout << "Account Balance left: " << acc;
        }
    }
    catch (const exception& e) {
        cerr << "Error: " << e.what() << endl;
    }

    return 0;
}
................................................................................................................................................